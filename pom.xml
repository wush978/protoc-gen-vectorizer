<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<name>${project.groupId}:${project.artifactId}</name>
	<description>A library to vectorize protocol buffer message based on the annotation in the proto files.</description>
	<url>https://github.com/wush978/protoc-gen-vectorizer</url>
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.wush978</groupId>
	<artifactId>protobuf-vectorizer</artifactId>
	<version>0.1.0</version>
	<packaging>jar</packaging>

	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Wush Wu</name>
			<email>wush978@gmail.com</email>
			<organization>Github</organization>
			<organizationUrl>https://github.com</organizationUrl>
		</developer>
	</developers>

	<properties>
		<mavenVersion>3.0</mavenVersion>
	</properties>
	<dependencies>
	 	<!-- https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>3.0.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>20.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
	</dependencies>

	<!-- Register local repository at ${project.build.directory}/mvn-repo -->
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

	<build>
		<plugins>

			<!-- Deploy to ${project.build.directory}/mvn-repo -->
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>

			<!-- Disable deploy to central repository -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<configuration>
					<skipDeploy>true</skipDeploy>
				</configuration>
			</plugin>
			<!-- Use UTF-8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>site-deploy</id>
						<goals>
							<goal>site</goal>
						</goals>
						<!-- select the Maven phase in which the plugin will be executed -->
						<phase>site-deploy</phase>
						<configuration>
							<!-- Plugin configuration ges here -->
							<server>github</server>
							<!-- The commit message -->
							<message>Building site for my project</message>
							<!-- The location where the site is uploaded -->
							<path>${site.path}</path>
							<!-- Use merge or override the content -->
							<merge>true</merge>
						</configuration>
					</execution>

					<execution>
						<id>mvn-repo</id>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
						<configuration>
							<server>github</server>
							<message>Maven artifacts for ${project.version}</message>
							<noJekyll>true</noJekyll>
							<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
							<branch>refs/heads/mvn-repo</branch>
							<includes><include>**/*</include></includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
